Lab – Implement Fine-Grained Access Controls
============================================

Up to this point any authenticated user to the API is authorized to use them. In this section we will restrict user1's ability to create users, but will still be able to modify the user's employee number.

Task – Retrieve Group Membership Subsession Variable
----------------------------------------------------

.. note :: In order to implement fine-grained control the session variables that contain the data must be known. This first session shows you how to display the session variables and their values.


1. From the Jumpbox, open **Postman**

|image23|

2. Expand the API Protection Collection

3. Select the request **GET-Retrieve User Attributes-JWT-Pass**

|image42|

4. Select the **Authorization** Tab

|image43|

5. Click **Get New Access Token**

|image44|

6. Review the Postman Configuration. Nothing should need to be modified

7. Click **Request Token**

|image27|

8. Login using Username: **user1**, Password: **user1**

|image28|

9. Scroll down the token and click **Use Token**

|image29|

10. Notice the **Access Token** field is now populated

|image34|

11. From the Jumpbox desktop click on the **BIG-IP1** Putty icon

|image47|

12. Enter the command **tailf /var/log/apm**.  Hit enter a few times to create some space on the screen

|image84|

13. From the Jumpbox, return to the Postman Request and Click **Send**

14. You receive a **200 OK** response status code with attributes for user1 in the body of the response

|image31|

.. Note :: Your SessionID will be different

15. In the logs you will see a message about a new subsession being created. Copy the subsession ID

|image85|

16. Exit the logs using Ctrl+Z

17. Enter the command **sessiondump -subkeys <subsessionID>**

|image86|

18.  Scroll through input until you find the session variable for **subsession.oauth.scope.last.jwt.groups**

|image87|


Task – Edit the per-request policy
----------------------------------

19. From the Jumpbox, access the BIG-IP GUI https://10.1.1.4 (you can double-click on the BIG-IP1 bookmark from Chrome)

20. From the Jumpbox, access the BIG-IP GUI https://10.1.1.4 (you can double-click on the BIG-IP1 bookmark from Chrome)

21. Login into the BIG-IP Configuration Utility with the following credentials:
User: **admin**
Password: **admin**

22. Click on the **Access** tab located on the left side

|image0|

23. Navigate to API Protection >> Profile.  Click **Profile** to modify the previously created API protection Profile (not the + Plus symbol)

|image48|

24. Click **Edit** Under Per-Request Policy

|image49|

25. Click the **+ (Plus Symbol)** on the GET /aduser/create branch

|image50|

26. Click the **General Purpose** tab

27. Select **Empty**

28. Click **Add Item**

|image51|

29. Enter the name **Claim Check**

|image53|

30. Click the **Branch Rules** tab

31. Click the **Add Branch Rule**

|image52|

32. Enter Name **CreateUser**

33. Click **Change**

|image54|

34. Click the **Advanced** tab

35. Enter the string in the notes section to restrict access to only members of the **CreateUser** Group

36. Click **Finished**

.. Note :: expr {[mcget {subsession.oauth.scope./Common/as-jwt-provider.jwt.groups}] contains "CreateUser"}

|image55|

37. Click **Save**

|image56|
38. Click **Reject** on the CreateUser Branch to permit access

|image57|

39. Select **Allow**

40. Click **Save**

|image58|

41. Click **Allow** on the fallback branch to deny unprivileged requests

|image59|

42. Select **Deny**

43. Click **Save**

|image60|

44. Review the Policy Flow

|image61|


Task – Test the Fine-Grained Access Control with user1
------------------------------------------------------

45. From the Jumpbox, open **Postman**

|image23|

46. Expand the **API Protection** Collection

47. Select the request **GET-Create User-JWT-Pass**

|image45|

48. Select the **Authorization** tab

49. Click **Get New Access Token**

|image44|

50. Review the Postman Configuration. Nothing should need to be modified

51. Click **Request Token**

|image27|

52. Login using Username: **user1**, Password: **user1**

|image28|

53. Scroll down to the token and click **Use Token**

|image29|

54. The **Token** field is now populated

|image34|

55. Click **Send**

56. You receive a **403 Forbidden** response status code when using user1. User1 does not contain the proper claim data.

|image26|


Task – Test the Fine-Grained Access Control with user2
------------------------------------------------------

57. Select the request **GET-Create User-JWT-Pass**

|image45|

58. Select the **Authorization** tab

59. Click **Get New Access Token**

|image44|

60. Review the Postman Configuration. Nothing should need to be modified

61. Click **Request Token**

|image27|

62. Login using Username: **user2**, Password: **user2**

|image62|

63. Scroll down to the token and click **Use Token**

|image29|

64. The **Token** field is now populated

|image34|

65. Click **Send**

66. You receive a **200 OK** response status code when using user2. User2 does contain the proper claim data

|image46|


.. |image0| image:: /_static/class1/module2/image000.png
.. |image23| image:: /_static/class1/module2/image023.png
.. |image26| image:: /_static/class1/module2/image026.png
.. |image27| image:: /_static/class1/module2/image027.png
.. |image28| image:: /_static/class1/module2/image028.png
.. |image29| image:: /_static/class1/module2/image029.png
.. |image31| image:: /_static/class1/module2/image031.png
.. |image34| image:: /_static/class1/module2/image034.png
.. |image42| image:: /_static/class1/module2/image042.png
.. |image43| image:: /_static/class1/module2/image043.png
.. |image44| image:: /_static/class1/module2/image044.png
.. |image45| image:: /_static/class1/module2/image045.png
.. |image46| image:: /_static/class1/module2/image046.png
.. |image47| image:: /_static/class1/module2/image047.png
.. |image48| image:: /_static/class1/module2/image048.png
.. |image49| image:: /_static/class1/module2/image049.png
.. |image50| image:: /_static/class1/module2/image050.png
.. |image51| image:: /_static/class1/module2/image051.png
.. |image52| image:: /_static/class1/module2/image052.png
.. |image53| image:: /_static/class1/module2/image053.png
.. |image54| image:: /_static/class1/module2/image054.png
.. |image55| image:: /_static/class1/module2/image055.png
.. |image56| image:: /_static/class1/module2/image056.png
.. |image57| image:: /_static/class1/module2/image057.png
.. |image58| image:: /_static/class1/module2/image058.png
.. |image59| image:: /_static/class1/module2/image059.png
.. |image60| image:: /_static/class1/module2/image060.png
.. |image61| image:: /_static/class1/module2/image061.png
.. |image62| image:: /_static/class1/module2/image062.png
.. |image63| image:: /_static/class1/module2/image063.png
.. |image84| image:: /_static/class1/module2/image084.png
.. |image85| image:: /_static/class1/module2/image085.png
.. |image86| image:: /_static/class1/module2/image086.png
.. |image87| image:: /_static/class1/module2/image087.png

