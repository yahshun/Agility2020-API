Lab – Test Course Grain Access
--------------------------------

In this section, you will sample API requests to the new created api.acme.com virtual server to test functionality


Task – Send a valid GET without JWT to retrieve user1's attributes 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1. From the Jumpbox ppen Postman 

|image23|

2. Expand the API Protection Collection
3. Select the request GET-Retrieve User Attributes-No JWT-Fail

|image24|


4. Click **Send**

|image25|

5. You receive a 403 Forbidden Response since you do not have a valid JWT.

|image26|

Task – Send a valid GET with JWT to retrieve user1's attributes  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

6. Select the request GET-Retrieve User Attributes-JWT-Pass

|image42|

7. Select the Authorization Tab

|image43|


8. Click **Get New Access Token**

|image44|

9. Review the Postman Configuration.  Nothing should need to be modified
10. Click **Request Token**

|image27|

11. Login using Username: user1, Password: user1

|image28|

12. Scroll down the token and click **Use Token**

|image29|

13. Notice the the Token field is now populated
14. Click **Send**
15. You receive a 200 OK with attributes for user1 in the body of the response

|image31|


Task – Send a valid GET with JWT to set user1's employeeNumber  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


16. Select the request GET-Set User Attributes-JWT-Pass

|image32|
17. Select the Authorization Tab
18. Select the previously created token from the Available Tokens dropdown.

|image33|
19. The Token field is now populated

|image34|

20. Click Send

..note If you receive a 403 repeat steps 10-13 to request a new token.  You can change the name of the token request prior to sending by setting the Token Name.

..note you can delete expired tokens by clicking the Available Tokens dropdown, clicking Manage Tokens, and then clicking the trashcan next to the Token


21. You receive a 200 OK with a response body that contains user1 employeeNumber 123456

|image35|


Task – Send invalid GET requests with JWT to set a nonexistent user attributes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

22. Select the request GET-Set Invalid Attributes-JWT-Fail

|image36|

23. Select the Authorization Tab
24. Select the previously created token from the Available Tokens dropdown.
25. The Token field is now populated
26. Click Send

..note If you receive a 403 repeat steps 10-13 to request a new token.  You can change the name of the token request prior to sending by setting the Token Name.

..note you can delete expired tokens by clicking the Available Tokens dropdown, clicking Manage Tokens, and then clicking the trashcan next to the Token


27. You receive a 400 Bad Request.  This is expected because the user doesn't actually exist

|image37|

Task – Send a POST request to a valid URI to set User1's attributes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

28. Select the request POST-Set User Attributes-JWT-Fail

|image38|

29. Click **Get New Access Token**
30. Review the Postman Configuration.  Nothing should need to be modified
31. Click **Request Token**
32. Login using Username: user1, Password: user1
33. Scroll down the token and click **User Token**
34. Notice the the Token field is now populated
35. Click **Send**
36. You receive a 403 Forbidden.  This is expected because the POST Method was not specified in the API protection profile for the URI /aduser/get

|image39|

Task – Send a GET request to an invalid URI
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

28. Select the request GET-Invalid URI-JWT-Fail

|image40|

29. Click **Get New Access Token**
30. Review the Postman Configuration.  Nothing should need to be modified
31. Click **Request Token**
32. Login using Username: user1, Password: user1
33. Scroll down the token and click **User Token**
34. Notice the the Token field is now populated
35. Click **Send**
36. You receive a 403 Forbidden.  This is expected because the URI /hacker/attack was not specified in the API Protection Profile

|image39|

Task - Send a XXXXX attack to a valid URI
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~






.. |image23| image:: /_static/class1/module2/image023.png
.. |image24| image:: /_static/class1/module2/image024.png
.. |image25| image:: /_static/class1/module2/image025.png
.. |image26| image:: /_static/class1/module2/image026.png
.. |image27| image:: /_static/class1/module2/image027.png
.. |image28| image:: /_static/class1/module2/image028.png
.. |image29| image:: /_static/class1/module2/image029.png
.. |image31| image:: /_static/class1/module2/image031.png
.. |image32| image:: /_static/class1/module2/image032.png
.. |image33| image:: /_static/class1/module2/image033.png
.. |image34| image:: /_static/class1/module2/image034.png
.. |image35| image:: /_static/class1/module2/image035.png
.. |image36| image:: /_static/class1/module2/image036.png
.. |image37| image:: /_static/class1/module2/image037.png
.. |image38| image:: /_static/class1/module2/image038.png
.. |image39| image:: /_static/class1/module2/image039.png
.. |image40| image:: /_static/class1/module2/image040.png
.. |image42| image:: /_static/class1/module2/image042.png
.. |image43| image:: /_static/class1/module2/image043.png
.. |image44| image:: /_static/class1/module2/image044.png




